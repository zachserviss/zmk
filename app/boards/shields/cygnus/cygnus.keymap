/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
 };
&sk {
     release-after-ms = <2000>;
     quick-release;
 };


/ { 
    combos {
        compatible = "zmk,combos";
		combo_esc { 
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
        };
		combo_tab { 
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp TAB>;
        };
    };

behaviors {
	hm: homerow_mods {
		compatible = "zmk,behavior-hold-tap";
		label = "HOMEROW_MODS";
		#binding-cells = <2>;
		tapping-term-ms = <240>;
		quick_tap_ms = <0>;
		flavor = "tap-preferred";
		bindings = <&kp>, <&kp>;
	};
	hs: homerow_shifts {
		compatible = "zmk,behavior-hold-tap";
		label = "HOMEROW_SHIFTS";
		#binding-cells = <2>;
		tapping-term-ms = <150>;
		quick_tap_ms = <0>;
		flavor = "balanced";
		bindings = <&kp>, <&kp>;
	};
	td: tapdance {
		compatible = "zmk,behavior-hold-tap";
		label = "TAPDANCE";
		#binding-cells = <2>;
		tapping-term-ms = <190>;
		quick_tap_ms = <0>;
		flavor = "tap-preferred";
		bindings = <&kp>, <&kp>;
	};
};

keymap {
	compatible = "zmk,keymap";
	
	default_layer {
		bindings = <
			&kp Q 	   	 &kp W 		&kp E		&kp R		&kp T				&kp Y 		&kp U		&kp I		&kp O		&kp P
			&hm LCTRL A  &kp S 		&kp D		&kp F	 	&kp G		 		&kp H 		&kp J		&kp K		&kp L 		&hm RCTRL SEMI
			&hs LSHIFT Z &kp X		&kp C 		&kp V 		&kp B   			&kp N		&kp M  		&kp COMMA 	&kp PERIOD	&hs RSHIFT SLASH
									&kp BSPC	&lt 1 DEL	&kp LALT			&kp RALT	&lt 2 RET	&kp SPACE	 
		>;
	};

	lower_layer {
		bindings = <
			&kp N1		&kp N2 		&kp N3		&kp N4		&kp N5				&kp N6 		&kp N7		&kp N8		&kp N9		&kp N0
			&trans		&trans		&trans		&trans		&kp PSCRN 			&kp LEFT	&kp DOWN	&kp UP		&kp RIGHT	&kp SQT
			&trans		&kp C_PREV	&kp C_NEXT	&kp LEFT	&kp RIGHT			&kp MINUS	&kp PLUS	&kp LBKT	&kp RBKT	&hs RSHIFT BSLH
									&trans		&trans		&kp LGUI			&trans		&trans		&trans
		>;
	};

	raise_layer {
		bindings = <
			&kp F1		&kp F2 		&kp F3		&kp F4		&kp F5				&kp F6 		&kp F7		&kp F8		&kp F9		&kp F10
			&kp F11		&kp F12		&trans		&kp GRAVE	&kp AMPS			&kp EQUAL	&kp LS(N9) 	&kp LS(N0)	&kp RA(LBKT) &kp RA(RBKT)
			&trans		&trans	 	&trans		&trans		&trans				&kp MINUS   &kp RA(SQT) &kp RA(BSLH) &kp BSLH	&kp LS(BSLH)
									&trans		&trans		&trans				&trans		&trans		&trans
		>;
	};

	adjust_layer {
		bindings = <
			&kp F1		&kp F2 		&kp F3		&kp F4		&kp F5				&kp F6 		&kp F7		&kp F8		&kp F9		&kp F10
			&kp F11		&kp F12		&trans		&trans		&trans	 			&trans		&trans		&trans		&trans		&trans
			&bt BT_PRV	&bt BT_NXT 	&bt BT_CLR	&trans		&trans				&trans		&trans		&trans		&trans		&trans
									&trans		&trans		&trans				&trans		&trans		&trans
		>;
	};
};
};